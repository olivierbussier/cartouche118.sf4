security:
    encoders:
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory: { memory: ~ }
        in_database:
            entity:
                class: App\Entity\User
                property: userName

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: in_database

            form_login:
                login_path: connexion
                check_path: connexion

            logout:
                path: deconnexion
                target: /

            access_denied_url: /access_denied

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
    - { path: ^/connexion,              roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: http  }
    - { path: ^/intranet/admin_blog,    roles: [ROLE_ADMIN, ROLE_PUB], requires_channel: http  }
    - { path: ^/intranet,               roles: ROLE_USER, requires_channel: http  }
    - { path: ^/,                       roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: http  }
    # - { path: ^/admin, roles: ROLE_ADMIN }
    # - { path: ^/profile, roles: ROLE_USER }

